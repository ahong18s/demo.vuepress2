import{_ as i,r as l,o as p,c as r,d as e,a as s,b as n,e as t}from"./app-27037075.js";const c={},d=s("h1",{id:"prismjs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#prismjs","aria-hidden":"true"},"#"),n(" prismjs")],-1),u={href:"https://prismjs.com/",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>This plugin has been integrated into the default theme.</p><p>Notice that this plugin would only tokenize the code fence without adding styles. When using it with a custom theme, you may need to choose and import Prism.js style theme yourself.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">@vuepress/plugin-prismjs@next</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">prismjsPlugin</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-prismjs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">prismjsPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// options</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="preloadlanguages" tabindex="-1"><a class="header-anchor" href="#preloadlanguages" aria-hidden="true">#</a> preloadLanguages</h3>`,7),m=s("li",null,[s("p",null,[n("Type: "),s("code",null,"string[]")])],-1),D=s("li",null,[s("p",null,[n("Default: "),s("code",null,"['markdown', 'jsdoc', 'yaml']")])],-1),g=s("p",null,"Details:",-1),y=s("p",null,"Languages to preload.",-1),v=s("p",null,"By default, languages will be loaded on demand when parsing markdown files.",-1),_={href:"https://github.com/PrismJS/prism/issues/2716",target:"_blank",rel:"noopener noreferrer"};function b(f,C){const o=l("NpmBadge"),a=l("ExternalLinkIcon");return p(),r("div",null,[d,e(o,{package:"@vuepress/plugin-prismjs"}),s("p",null,[n("This plugin will enable syntax highlighting for markdown code fence with "),s("a",u,[n("Prism.js"),e(a)]),n(".")]),h,s("ul",null,[m,D,s("li",null,[g,y,v,s("p",null,[n("However, Prism.js has "),s("a",_,[n("some potential issues"),e(a)]),n(" about loading languages dynamically. To avoid them, you can preload languages via this option.")])])])])}const x=i(c,[["render",b],["__file","prismjs.html.vue"]]);export{x as default};
