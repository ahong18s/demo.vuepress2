import{_ as c,r as p,o as l,c as u,a as s,b as n,d as a,w as t,e as o}from"./app-4042ea51.js";const r={},d=s("h1",{id:"开发插件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#开发插件","aria-hidden":"true"},"#"),n(" 开发插件")],-1),v={class:"custom-container tip"},k=s("p",{class:"custom-container-title"},"提示",-1),m=s("h2",{id:"创建一个插件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#创建一个插件","aria-hidden":"true"},"#"),n(" 创建一个插件")],-1),_=s("em",null,"插件对象",-1),b=o(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> fooPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-foo&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g=s("em",null,"插件对象",-1),h=s("em",null,"插件函数",-1),f=o(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">barPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-bar&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 <em>插件对象</em> 或者 <em>插件函数</em> 作为返回值。于是，你的插件应该转换成这样的形式：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">fooPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-foo&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">barPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-bar&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布到-npm" tabindex="-1"><a class="header-anchor" href="#发布到-npm" aria-hidden="true">#</a> 发布到 NPM</h2>`,4),x={href:"https://docs.npmjs.com/cli/v8/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"},y=o(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-plugin-foo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;vuepress-plugin&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w=s("code",null,"name",-1),P=s("code",null,"vuepress-plugin-xxx",-1),q=s("code",null,"@org/vuepress-plugin-xxx",-1),N=s("em",null,"插件对象",-1),j=s("li",null,[n("在 "),s("code",null,"keywords"),n(" 中包含 "),s("code",null,"vuepress-plugin"),n(" ，这样用户可以在 NPM 上搜索到你的插件。")],-1);function V(L,B){const e=p("RouterLink"),i=p("ExternalLinkIcon");return l(),u("div",null,[d,s("div",v,[k,s("p",null,[n("在阅读该指南之前，你最好先了解一下 VuePress 的 "),a(e,{to:"/advanced/architecture.html"},{default:t(()=>[n("架构")]),_:1}),n(" 。")])]),m,s("p",null,[n("插件是一个符合 "),a(e,{to:"/reference/plugin-api.html"},{default:t(()=>[n("插件 API")]),_:1}),n(" 的普通 JavaScript 对象，称之为 "),_,n(" ：")]),b,s("p",null,[n("插件还可以是一个接收 "),a(e,{to:"/reference/node-api.html#app"},{default:t(()=>[n("App 实例")]),_:1}),n(" 作为参数，且返回值为 "),g,n(" 的函数，称之为 "),h,n(" ：")]),f,s("p",null,[n("在创建了插件之后，你需要在 "),s("a",x,[n("package.json"),a(i)]),n(" 文件中遵循一定的约定，然后再将其发布到 NPM 上：")]),y,s("ul",null,[s("li",null,[n("将 "),w,n(" 按照约定命名，即 "),P,n(" 或 "),q,n(" ，它应该和 "),N,n(" 的 "),a(e,{to:"/reference/plugin-api.html#name"},{default:t(()=>[n("name")]),_:1}),n(" 字段保持一致。")]),j])])}const I=c(r,[["render",V],["__file","plugin.html.vue"]]);export{I as default};
