import{_ as r,r as t,o as c,c as d,d as n,a as s,b as l,w as e,e as p}from"./app-d19e66db.js";const D={},u=s("h1",{id:"node-api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#node-api","aria-hidden":"true"},"#"),l(" Node API")],-1),h={href:"https://www.npmjs.com/package/@vuepress/core",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.npmjs.com/package/vuepress",target:"_blank",rel:"noopener noreferrer"},v=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">@vuepress/core@next</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> App</h2>`,2),C=p(`<p><code>BuildApp</code> 和 <code>DevApp</code> 除了 <a href="#build">build</a> 和 <a href="#dev">dev</a> 方法外，拥有一样的属性和方法。</p><h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp" aria-hidden="true">#</a> createBuildApp</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createBuildApp</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AppConfig</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">BuildApp</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Build 模式的 App 实例，用于构建静态文件。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createBuildApp</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ...配置项</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 初始化和准备</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 构建</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 处理 onGenerated hook</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pluginApi</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hooks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onGenerated</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考： <ul><li><a href="#build">Node API &gt; App 方法 &gt; build</a></li></ul></li></ul><h3 id="createdevapp" tabindex="-1"><a class="header-anchor" href="#createdevapp" aria-hidden="true">#</a> createDevApp</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createDevApp</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AppConfig</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DevApp</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Dev 模式的 App 实例，用于启动开发服务器。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createDevApp</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ...配置项</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 初始化和准备</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 启动开发服务器</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">closeDevServer</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 准备文件监听器</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">watchers</span><span style="color:#D4D4D4;"> = []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 重启开发服务器</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">restart</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">all</span><span style="color:#D4D4D4;">([</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 关闭所有监听器</span></span>
<span class="line"><span style="color:#D4D4D4;">      ...</span><span style="color:#9CDCFE;">watchers</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">close</span><span style="color:#D4D4D4;">()),</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 关闭当前的开发服务器</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">closeDevServer</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    ])</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 处理 onWatched hook</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pluginApi</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hooks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onWatched</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">watchers</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">restart</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考： <ul><li><a href="#dev">Node API &gt; App 方法 &gt; dev</a></li></ul></li></ul><h2 id="app-属性" tabindex="-1"><a class="header-anchor" href="#app-属性" aria-hidden="true">#</a> App 属性</h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li><p>类型： <code>AppOptions</code></p></li><li><p>详情：</p><p>VuePress App 的配置项。</p><p>这些配置项来自于 <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a> 的 <code>config</code> 参数，但所有可选的字段都填充上了默认值。</p></li></ul><h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata" aria-hidden="true">#</a> siteData</h3>`,21),m=s("li",null,[s("p",null,[l("类型： "),s("code",null,"SiteData")])],-1),b=s("p",null,"详情：",-1),g=p('<h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>VuePress App 的版本，即 <code>@vuepress/core</code> 包的版本。</p></li></ul><h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild" aria-hidden="true">#</a> env.isBuild</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Build 模式的环境标记，即当前 App 是否是 <a href="#createbuildapp">BuildApp</a> 实例。</p></li></ul><h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev" aria-hidden="true">#</a> env.isDev</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Dev 模式的环境标记，即当前 App 是否是 <a href="#createdevapp">DevApp</a> 实例。</p></li></ul><h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug" aria-hidden="true">#</a> env.isDebug</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否开启 Debug 模式的环境标记。</p></li></ul><h3 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> markdown</h3>',9),_=s("li",null,[s("p",null,[l("类型： "),s("code",null,"MarkdownIt")])],-1),E=s("p",null,"详情：",-1),f={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},A=s("h3",{id:"pages",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pages","aria-hidden":"true"},"#"),l(" pages")],-1),k=s("li",null,[s("p",null,[l("类型： "),s("code",null,"Page[]")])],-1),x=s("p",null,"详情：",-1),F=s("p",null,[s("a",{href:"#page"},"Page"),l(" 对象数组。")],-1),P=p(`<h2 id="app-方法" tabindex="-1"><a class="header-anchor" href="#app-方法" aria-hidden="true">#</a> App 方法</h2><h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> dir</h3><ul><li><p>工具函数：</p><ul><li><code>dir.cache()</code>： 解析至缓存目录</li><li><code>dir.temp()</code>： 解析至临时文件目录</li><li><code>dir.source()</code>： 解析至源文件目录</li><li><code>dir.dest()</code>： 解析至输出目录</li><li><code>dir.client()</code>： 解析至 <code>@vuepress/client</code> 目录</li><li><code>dir.public()</code>： 解析至 Public 文件目录</li></ul></li><li><p>函数签名：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppDirFunction</span><span style="color:#D4D4D4;"> = (...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>用于解析对应目录下的文件绝对路径的一些工具函数。</p><p>如果你不传入任何参数，就会返回对应目录的绝对路径。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 解析 \`\${sourceDir}/README.md\` 文件的绝对路径</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">homeSourceFile</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">dir</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;README.md&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="writetemp" tabindex="-1"><a class="header-anchor" href="#writetemp" aria-hidden="true">#</a> writeTemp</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">writeTemp</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">file</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td><code>string</code></td><td>要写入的临时文件的路径，相对于临时文件目录。</td></tr><tr><td>content</td><td><code>string</code></td><td>要写入的临时文件路径的内容。</td></tr></tbody></table><ul><li><p>详情：</p><p>用于写入临时文件的方法。</p><p>写入的文件可以在客户端文件中通过 <code>@temp</code> 别名来引入。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 在 onPrepared hook 中写入临时文件</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">onPrepared</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">writeTemp</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;foo.js&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;export const foo = </span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">bar</span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 在客户端文件中引入临时文件</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@temp/foo&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> init</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17),B=s("li",null,[s("p",null,"详情："),s("p",null,"初始化 VuePress App 。")],-1),w=s("p",null,"参考：",-1),M=p(`<h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare" aria-hidden="true">#</a> prepare</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),I=s("li",null,[s("p",null,"详情："),s("p",null,"准备客户端临时文件。")],-1),R=s("p",null,"参考：",-1),N=p(`<h3 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),V=s("li",null,[s("p",null,"详情："),s("p",null,"生成静态站点文件。"),s("p",null,[l("该方法仅在 "),s("a",{href:"#createbuildapp"},"BuildApp"),l(" 中可用。")])],-1),H=s("p",null,"参考：",-1),z=p(`<h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> dev</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),L=s("li",null,[s("p",null,"详情："),s("p",null,"启动开发服务器。"),s("p",null,[l("该方法仅在 "),s("a",{href:"#createdevapp"},"DevApp"),l(" 中可用。")])],-1),S=s("p",null,"参考：",-1),j=p(`<h2 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> Page</h2><h3 id="createpage" tabindex="-1"><a class="header-anchor" href="#createpage" aria-hidden="true">#</a> createPage</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createPage</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">App</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageOptions</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Page</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>app</td><td><code>App</code></td><td>VuePress App 实例。</td></tr><tr><td>options</td><td><code>PageOptions</code></td><td>创建 VuePress Page 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 VuePress Page 对象。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">createPage</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 在 onInitialized hook 中创建一个额外页面</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">onInitialized</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createPage</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">path:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;/foo.html&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">frontmatter:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">layout:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Layout&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        },</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">content:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`</span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#CE9178;"># 某个 Page</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CE9178;">你好，世界。</span></span>
<span class="line"><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      })</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),T=s("li",null,[s("a",{href:"#pages"},"Node API > App 属性 > pages")],-1),O=s("h2",{id:"page-属性",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#page-属性","aria-hidden":"true"},"#"),l(" Page 属性")],-1),G=s("h3",{id:"key",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#key","aria-hidden":"true"},"#"),l(" key")],-1),W=s("li",null,[s("p",null,[l("类型： "),s("code",null,"string")])],-1),K=s("p",null,"详情：",-1),U=s("p",null,"该 Page 的标识。",-1),$={href:"https://router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},q=s("p",null,"参考：",-1),J=s("h3",{id:"path",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#"),l(" path")],-1),Q=s("li",null,[s("p",null,[l("类型： "),s("code",null,"string")])],-1),X=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的路由路径。")],-1),Y=s("p",null,"参考：",-1),Z=s("li",null,[s("a",{href:"#pathinferred"},"Node API > Page 属性 > pathInferred")],-1),ss=s("h3",{id:"title",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#title","aria-hidden":"true"},"#"),l(" title")],-1),ls=s("li",null,[s("p",null,[l("类型： "),s("code",null,"string")])],-1),ns=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的标题。")],-1),as=s("p",null,"参考：",-1),es=s("h3",{id:"lang",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#lang","aria-hidden":"true"},"#"),l(" lang")],-1),ps=p("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的语言。</p></li><li><p>示例：</p><ul><li><code>&#39;en-US&#39;</code></li><li><code>&#39;zh-CN&#39;</code></li></ul></li>",3),os=s("p",null,"参考：",-1),ts=s("h3",{id:"frontmatter",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),l(" frontmatter")],-1),is=s("li",null,[s("p",null,[l("类型： "),s("code",null,"PageFrontmatter")])],-1),rs=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的 Frontmatter 。")],-1),cs=s("p",null,"参考：",-1),ds=p(`<h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> headers</h3><ul><li>类型： <code>PageHeader[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">level</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">slug</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">children</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Ds=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的小标题。")],-1),us=s("p",null,"参考：",-1),hs=p(`<h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li>类型： <code>PageData</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageData</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">lang</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">frontmatter</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageFrontmatter</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),ys=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的数据。"),s("p",null,"Page 数据可以在客户端代码中使用。")],-1),vs=s("p",null,"参考：",-1),Cs=p('<h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的未经渲染的原始内容。</p></li></ul><h3 id="contentrendered" tabindex="-1"><a class="header-anchor" href="#contentrendered" aria-hidden="true">#</a> contentRendered</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的渲染后的内容。</p></li></ul><h3 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> date</h3>',5),ms=p("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的日期，遵从 &#39;yyyy-MM-dd&#39; 格式。</p></li><li><p>示例：</p><ul><li><code>&#39;0000-00-00&#39;</code></li><li><code>&#39;2021-08-16</code>&#39;</li></ul></li>",3),bs=s("p",null,"参考：",-1),gs=s("h3",{id:"deps",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#deps","aria-hidden":"true"},"#"),l(" deps")],-1),_s=s("li",null,[s("p",null,[l("类型： "),s("code",null,"string[]")])],-1),Es=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的依赖。"),s("p",null,[l("举例来说，如果在页面中导入了代码片段，那么被导入文件的绝对路径就会被添加到 "),s("code",null,"deps"),l(" 中。")])],-1),fs=s("p",null,"参考：",-1),As=p(`<h3 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h3><ul><li>类型： <code>MarkdownLink[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownLink</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">raw</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">relative</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">absolute</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>该 Page 内容中包含的链接。</p></li></ul><h3 id="markdownenv" tabindex="-1"><a class="header-anchor" href="#markdownenv" aria-hidden="true">#</a> markdownEnv</h3>`,5),ks=p("<li><p>类型： <code>Record&lt;string, unknown&gt;</code></p></li><li><p>详情：</p><p>在使用 markdown-it 解析 Markdown 内容时的 <code>env</code> 对象。</p><p>一些 markdown-it 插件可能会在这个对象中存储一些额外的信息，你可以使用它们来进行高级定制化。</p><p>需要注意的是，其他的一些 Page 属性其实也是从 <code>env</code> 对象中获取到的，但是我们已经把这些属性从 <code>page.markdownEnv</code> 中移除掉了。</p></li>",2),xs=s("p",null,"参考：",-1),Fs={href:"https://markdown-it.github.io/markdown-it/#MarkdownIt.parse",target:"_blank",rel:"noopener noreferrer"},Ps=s("h3",{id:"pathinferred",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pathinferred","aria-hidden":"true"},"#"),l(" pathInferred")],-1),Bs=p('<li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 根据文件路径推断出的路由路径。</p><p>默认情况下，路由路径是根据 Markdown 源文件的相对文件路径推断出来的。然而，用户可能会显式指定页面路由，比如通过 <a href="#permalink">permalink</a> 来指定该页面最终使用的路由路径。因此我们在 Page 属性中保留推断出来的路径，以便于你在某些情况下可能会用到它。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/foo.html&#39;</code></li></ul></li>',3),ws=s("p",null,"参考：",-1),Ms=s("li",null,[s("a",{href:"#path"},"Node API > Page 属性 > path")],-1),Is=s("h3",{id:"pathlocale",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pathlocale","aria-hidden":"true"},"#"),l(" pathLocale")],-1),Rs=p("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 路由路径的 Locale 前缀。</p><p>它是根据页面的 Markdown 源文件相对路径、以及用户配置的 <code>locales</code> 的键推断得到的。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/en/&#39;</code></li><li><code>&#39;/zh/&#39;</code></li></ul></li>",3),Ns=s("p",null,"参考：",-1),Vs=s("h3",{id:"permalink",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#permalink","aria-hidden":"true"},"#"),l(" permalink")],-1),Hs=s("li",null,[s("p",null,[l("类型： "),s("code",null,"string | null")])],-1),zs=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 的永久链接。")],-1),Ls=s("p",null,"参考：",-1),Ss=s("h3",{id:"routemeta",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#routemeta","aria-hidden":"true"},"#"),l(" routeMeta")],-1),js=s("li",null,[s("p",null,[l("类型： "),s("code",null,"Record<string, unknown>")])],-1),Ts=s("li",null,[s("p",null,"详情："),s("p",null,"附加到 vue-router 路由记录上的额外数据。")],-1),Os=s("p",null,"参考：",-1),Gs={href:"https://router.vuejs.org/zh/api/#meta",target:"_blank",rel:"noopener noreferrer"},Ws=p('<div class="custom-container tip"><p class="custom-container-title">Route Meta 和 Page Data 的区别是什么？</p><p><a href="#routemeta">Route Meta</a> 和 <a href="#data">Page Data</a> 都可以在客户端代码中使用。然而， Route Meta 是附加在路由记录上的，因此当用户进入你的站点时，所有页面的 Route Meta 都会立即被加载。相比之下， Page Data 是存储在单独的文件中的，只有在用户进入对应页面时才会被加载。</p><p>因此，不建议在 Route Meta 中存储大量的信息，否则在站点有很多页面时，将会影响站点的初始加载速度。</p></div><h3 id="sfcblocks" tabindex="-1"><a class="header-anchor" href="#sfcblocks" aria-hidden="true">#</a> sfcBlocks</h3>',2),Ks=s("li",null,[s("p",null,[l("类型： "),s("code",null,"MarkdownSfcBlocks")])],-1),Us=s("li",null,[s("p",null,"详情："),s("p",null,"该 Page 中提取出的 Vue SFC Blocks 。")],-1),$s=s("p",null,"参考：",-1),qs=p('<h3 id="slug" tabindex="-1"><a class="header-anchor" href="#slug" aria-hidden="true">#</a> slug</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的 Slug 。</p><p>它是根据页面的 Markdown 源文件的文件名推断得到的。</p></li></ul><h3 id="filepath" tabindex="-1"><a class="header-anchor" href="#filepath" aria-hidden="true">#</a> filePath</h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的绝对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul><h3 id="filepathrelative" tabindex="-1"><a class="header-anchor" href="#filepathrelative" aria-hidden="true">#</a> filePathRelative</h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的相对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul>',6);function Js(Qs,Xs){const i=t("NpmBadge"),o=t("ExternalLinkIcon"),a=t("RouterLink");return c(),d("div",null,[u,n(i,{package:"@vuepress/core"}),s("p",null,[l("Node API 是由 "),s("a",h,[l("@vuepress/core"),n(o)]),l(" 包提供的。它是 "),s("a",y,[l("vuepress"),n(o)]),l(" 包的依赖之一，当然你也可以单独安装它：")]),v,s("p",null,[n(a,{to:"/reference/plugin-api.html"},{default:e(()=>[l("插件 API")]),_:1}),l(" 的所有 Hooks 中都可以获取到 App 实例。")]),C,s("ul",null,[m,s("li",null,[b,s("p",null,[l("由用户设置的站点数据，包含所有的 "),n(a,{to:"/reference/config.html#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE"},{default:e(()=>[l("站点配置")]),_:1}),l(" ，可以在客户端代码中使用。")])])]),g,s("ul",null,[_,s("li",null,[E,s("p",null,[l("用于解析 Markdown 内容的 "),s("a",f,[l("markdown-it"),n(o)]),l(" 实例。")]),s("p",null,[l("它仅在 "),n(a,{to:"/reference/plugin-api.html#oninitialized"},{default:e(()=>[l("onInitialized")]),_:1}),l(" 以及之后的 Hooks 中才可用。")])])]),A,s("ul",null,[k,s("li",null,[x,F,s("p",null,[l("它仅在 "),n(a,{to:"/reference/plugin-api.html#oninitialized"},{default:e(()=>[l("onInitialized")]),_:1}),l(" 以及之后的 Hooks 中才可用。")])])]),P,s("ul",null,[B,s("li",null,[w,s("ul",null,[s("li",null,[n(a,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:e(()=>[l("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),M,s("ul",null,[I,s("li",null,[R,s("ul",null,[s("li",null,[n(a,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:e(()=>[l("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),N,s("ul",null,[V,s("li",null,[H,s("ul",null,[s("li",null,[n(a,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:e(()=>[l("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),z,s("ul",null,[L,s("li",null,[S,s("ul",null,[s("li",null,[n(a,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:e(()=>[l("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),j,s("ul",null,[s("li",null,[l("参考： "),s("ul",null,[T,s("li",null,[n(a,{to:"/advanced/cookbook/adding-extra-pages.html"},{default:e(()=>[l("Cookbook > 添加额外页面")]),_:1})])])])]),O,G,s("ul",null,[W,s("li",null,[K,U,s("p",null,[l("Page Key 会被用作页面路由的 "),s("a",$,[l("name"),n(o)]),l("。")])]),s("li",null,[q,s("ul",null,[s("li",null,[n(a,{to:"/reference/components.html#content"},{default:e(()=>[l("Built-in Components > Content")]),_:1})])])])]),J,s("ul",null,[Q,X,s("li",null,[Y,s("ul",null,[s("li",null,[n(a,{to:"/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:e(()=>[l("指南 > 页面 > 路由")]),_:1})]),Z])])]),ss,s("ul",null,[ls,ns,s("li",null,[as,s("ul",null,[s("li",null,[n(a,{to:"/reference/frontmatter.html#title"},{default:e(()=>[l("Frontmatter > title")]),_:1})])])])]),es,s("ul",null,[ps,s("li",null,[os,s("ul",null,[s("li",null,[n(a,{to:"/reference/frontmatter.html#title"},{default:e(()=>[l("Frontmatter > lang")]),_:1})])])])]),ts,s("ul",null,[is,rs,s("li",null,[cs,s("ul",null,[s("li",null,[n(a,{to:"/reference/frontmatter.html"},{default:e(()=>[l("Frontmatter")]),_:1})])])])]),ds,s("ul",null,[Ds,s("li",null,[us,s("ul",null,[s("li",null,[n(a,{to:"/reference/config.html#markdown-headers"},{default:e(()=>[l("配置 > markdown.headers")]),_:1})])])])]),hs,s("ul",null,[ys,s("li",null,[vs,s("ul",null,[s("li",null,[n(a,{to:"/reference/client-api.html#usepagedata"},{default:e(()=>[l("客户端 API > usePageData")]),_:1})]),s("li",null,[n(a,{to:"/reference/plugin-api.html#extendspage"},{default:e(()=>[l("插件 API > extendsPage")]),_:1})])])])]),Cs,s("ul",null,[ms,s("li",null,[bs,s("ul",null,[s("li",null,[n(a,{to:"/reference/frontmatter.html#date"},{default:e(()=>[l("Frontmatter > date")]),_:1})])])])]),gs,s("ul",null,[_s,Es,s("li",null,[fs,s("ul",null,[s("li",null,[n(a,{to:"/reference/config.html#markdown-importcode"},{default:e(()=>[l("配置 > markdown.importCode")]),_:1})])])])]),As,s("ul",null,[ks,s("li",null,[xs,s("ul",null,[s("li",null,[s("a",Fs,[l("markdown-it > API Documentation > MarkdownIt > parse"),n(o)])])])])]),Ps,s("ul",null,[Bs,s("li",null,[ws,s("ul",null,[s("li",null,[n(a,{to:"/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:e(()=>[l("指南 > 页面 > 路由")]),_:1})]),Ms])])]),Is,s("ul",null,[Rs,s("li",null,[Ns,s("ul",null,[s("li",null,[n(a,{to:"/reference/config.html#locales"},{default:e(()=>[l("配置 > locales")]),_:1})])])])]),Vs,s("ul",null,[Hs,zs,s("li",null,[Ls,s("ul",null,[s("li",null,[n(a,{to:"/reference/frontmatter.html#permalink"},{default:e(()=>[l("Frontmatter > permalink")]),_:1})]),s("li",null,[n(a,{to:"/reference/frontmatter.html#permalinkpattern"},{default:e(()=>[l("Frontmatter > permalinkPattern")]),_:1})])])])]),Ss,s("ul",null,[js,Ts,s("li",null,[Os,s("ul",null,[s("li",null,[n(a,{to:"/reference/frontmatter.html#routemeta"},{default:e(()=>[l("Frontmatter > routeMeta")]),_:1})]),s("li",null,[s("a",Gs,[l("vue-router > API 参考 > RouteRecordRaw > meta"),n(o)])])])])]),Ws,s("ul",null,[Ks,Us,s("li",null,[$s,s("ul",null,[s("li",null,[n(a,{to:"/reference/config.html#markdown-sfc"},{default:e(()=>[l("配置 > markdown.sfc")]),_:1})])])])]),qs])}const Zs=r(D,[["render",Js],["__file","node-api.html.vue"]]);export{Zs as default};
