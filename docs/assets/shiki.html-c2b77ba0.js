import{_ as r,r as l,o,c as d,d as s,a as e,b as i,e as a}from"./app-8ceb8f5d.js";const h={},c=e("h1",{id:"shiki",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#shiki","aria-hidden":"true"},"#"),i(" shiki")],-1),p={href:"https://shiki.matsu.io/",target:"_blank",rel:"noopener noreferrer"},u={class:"custom-container tip"},_=e("p",{class:"custom-container-title"},"提示",-1),m={href:"https://shiki.matsu.io/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://prismjs.com/",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,[i("你可以考虑在 "),e("code",null,"dev"),i(" 模式下禁用该插件来获取更好的开发体验。")],-1),v=a(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npm i -D @vuepress/plugin-shiki@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>import { shikiPlugin } from &#39;@vuepress/plugin-shiki&#39;

export default {
  plugins: [
    shikiPlugin({
      // 配置项
    }),
  ],
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="theme" tabindex="-1"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> theme</h3>`,5),b=a("<li><p>类型： <code>IThemeRegistration</code></p></li><li><p>默认值： <code>&#39;nord&#39;</code></p></li><li><p>详情：</p><p>Shiki 的主题。</p><p>该配置项会被传递到 Shiki 的 <code>getHighlighter()</code> 方法中。</p></li>",3),f=e("p",null,"参考：",-1),x={href:"https://github.com/shikijs/shiki/blob/master/docs/themes.md",target:"_blank",rel:"noopener noreferrer"},S=e("h3",{id:"langs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#langs","aria-hidden":"true"},"#"),i(" langs")],-1),N=a("<li><p>类型： <code>(Lang | ILanguageRegistration)[]</code></p></li><li><p>默认值： <code>[]</code></p></li><li><p>详情：</p><p>Shiki 的语言。</p><p>该配置项会被传递到 Shiki 的 <code>getHighlighter()</code> 方法中。</p><p>如果没有传入语言， Shiki 会自动加载所有可用的语言。</p></li>",3),B=e("p",null,"参考：",-1),V={href:"https://github.com/shikijs/shiki/blob/master/docs/languages.md",target:"_blank",rel:"noopener noreferrer"};function j(I,L){const t=l("NpmBadge"),n=l("ExternalLinkIcon");return o(),d("div",null,[c,s(t,{package:"@vuepress/plugin-shiki"}),e("p",null,[i("该插件使用 "),e("a",p,[i("Shiki"),s(n)]),i(" 来为 Markdown 代码块启用代码高亮。")]),e("div",u,[_,e("p",null,[e("a",m,[i("Shiki"),s(n)]),i(" 是 VSCode 正在使用的代码高亮器。它具有更高的保真度，但比 "),e("a",g,[i("Prism.js"),s(n)]),i(" 要慢一些，特别是在有大量代码块需要处理的时候。")]),k]),v,e("ul",null,[b,e("li",null,[f,e("ul",null,[e("li",null,[e("a",x,[i("shiki > themes"),s(n)])])])])]),S,e("ul",null,[N,e("li",null,[B,e("ul",null,[e("li",null,[e("a",V,[i("shiki > languages"),s(n)])])])])])])}const P=r(h,[["render",j],["__file","shiki.html.vue"]]);export{P as default};
