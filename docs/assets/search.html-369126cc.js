import{_ as o,r as n,o as c,c as u,d as a,a as e,b as i,w as t,e as s}from"./app-09910f35.js";const h={},p=e("h1",{id:"search",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#search","aria-hidden":"true"},"#"),i(" search")],-1),m=s(`<p>Provide local search to your documentation site.</p><div class="custom-container tip"><p class="custom-container-title">prompt</p><p>Default theme will add search box to the navbar once you configure this plugin correctly.</p><p>This plugin may not be used directly in other themes, so you&#39;d better refer to the documentation of your theme for more details.</p></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npm i -D @vuepress/plugin-search@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>import { searchPlugin } from &#39;@vuepress/plugin-search&#39;

export default {
  plugins: [
    searchPlugin({
      // options
    }),
  ],
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="local-search-index" tabindex="-1"><a class="header-anchor" href="#local-search-index" aria-hidden="true">#</a> Local Search Index</h2><p>This plugin will generate search index from your pages locally, and load the search index file when users enter your site. In other words, this is a lightweight built-in search which does not require any external requests.</p>`,7),v=s(`<h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>Type: <code>Record&lt;string, { placeholder: string }&gt;</code></p></li><li><p>Details:</p><p>The text of the search box in different locales.</p><p>If this option is not specified, it will fallback to default text.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>export default {
  plugins: [
    searchPlugin({
      locales: {
        &#39;/&#39;: {
          placeholder: &#39;Search&#39;,
        },
        &#39;/zh/&#39;: {
          placeholder: &#39;搜索&#39;,
        },
      },
    }),
  ],
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),g=s('<h3 id="hotkeys" tabindex="-1"><a class="header-anchor" href="#hotkeys" aria-hidden="true">#</a> hotKeys</h3><ul><li>Type: <code>(string | HotKeyOptions)[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>File not found</code></pre><div class="line-numbers" aria-hidden="true"></div></div>',3),b=e("li",null,[e("p",null,[i("Default: "),e("code",null,"['s', '/']")])],-1),f=e("p",null,"Details:",-1),x={href:"http://keycode.info/",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,"When hotkeys are pressed, the search box input will be focused.",-1),_=e("p",null,"Set to an empty array to disable hotkeys.",-1),w=s(`<h3 id="maxsuggestions" tabindex="-1"><a class="header-anchor" href="#maxsuggestions" aria-hidden="true">#</a> maxSuggestions</h3><ul><li><p>Type: <code>number</code></p></li><li><p>Default: <code>5</code></p></li><li><p>Details:</p><p>Specify the maximum number of search results.</p></li></ul><h3 id="issearchable" tabindex="-1"><a class="header-anchor" href="#issearchable" aria-hidden="true">#</a> isSearchable</h3><ul><li><p>Type: <code>(page: Page) =&gt; boolean</code></p></li><li><p>Default: <code>() =&gt; true</code></p></li><li><p>Details:</p><p>A function to determine whether a page should be included in the search index.</p><ul><li>Return <code>true</code> to include the page.</li><li>Return <code>false</code> to exclude the page.</li></ul></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>export default {
  plugins: [
    searchPlugin({
      // exclude the homepage
      isSearchable: (page) =&gt; page.path !== &#39;/&#39;,
    }),
  ],
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getextrafields" tabindex="-1"><a class="header-anchor" href="#getextrafields" aria-hidden="true">#</a> getExtraFields</h3><ul><li><p>Type: <code>(page: Page) =&gt; string[]</code></p></li><li><p>Default: <code>() =&gt; []</code></p></li><li><p>Details:</p><p>A function to add extra fields to the search index of a page.</p><p>By default, this plugin will use page title and headers as the search index. This option could help you to add more searchable fields.</p></li><li><p>Example:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>export default {
  plugins: [
    searchPlugin({
      // allow searching the \`tags\` frontmatter
      getExtraFields: (page) =&gt; page.frontmatter.tags ?? [],
    }),
  ],
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="styles" tabindex="-1"><a class="header-anchor" href="#styles" aria-hidden="true">#</a> Styles</h2><p>You can customize the style of the search box via CSS variables:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>File not found</code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="components" tabindex="-1"><a class="header-anchor" href="#components" aria-hidden="true">#</a> Components</h2><h3 id="searchbox" tabindex="-1"><a class="header-anchor" href="#searchbox" aria-hidden="true">#</a> SearchBox</h3><ul><li><p>Details:</p><p>This plugin will register a <code>&lt;SearchBox /&gt;</code> component globally, and you can use it without any props.</p><p>Put this component to where you want to place the search box. For example, default theme puts this component to the end of the navbar.</p></li></ul><div class="custom-container tip"><p class="custom-container-title">prompt</p><p>This component is mainly used for theme development. You don&#39;t need to use it directly in most cases.</p></div>`,15);function k(S,D){const d=n("NpmBadge"),l=n("RouterLink"),r=n("ExternalLinkIcon");return c(),u("div",null,[p,a(d,{package:"@vuepress/plugin-search"}),m,e("p",null,[i("However, when your site has a large number of pages, the size of search index file would be very large, which could slow down the page loading speed. In this case, we recommend you to use a more professional solution - "),a(l,{to:"/en-US/reference/plugin/docsearch.html"},{default:t(()=>[i("docsearch")]),_:1}),i(".")]),v,e("ul",null,[e("li",null,[i("Also see: "),e("ul",null,[e("li",null,[a(l,{to:"/en-US/guide/i18n.html"},{default:t(()=>[i("Guide > I18n")]),_:1})])])])]),g,e("ul",null,[b,e("li",null,[f,e("p",null,[i("Specify the "),e("a",x,[i("event.key"),a(r)]),i(" of the hotkeys.")]),y,_])]),w])}const P=o(h,[["render",k],["__file","search.html.vue"]]);export{P as default};
