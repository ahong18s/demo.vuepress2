import{_ as i,r as e,o as c,c as d,d as a,a as s,b as n,w as r,e as o}from"./app-27037075.js";const D={},u=s("h1",{id:"container",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),n(" container")],-1),y=s("p",null,"为你的 VuePress 站点注册自定义容器。",-1),h={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},v=o(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">@vuepress/plugin-container@next</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">containerPlugin</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-container&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">containerPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 配置项</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="容器语法" tabindex="-1"><a class="header-anchor" href="#容器语法" aria-hidden="true">#</a> 容器语法</h2><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">::: &lt;type&gt; [</span><span style="color:#CE9178;">info</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">content</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">:::</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>type</code> 是必需的，应通过 <a href="#type">type</a> 配置项来指定。</li><li><code>info</code> 是可选的，其默认值可以通过 <a href="#locales">locales</a> 的 <code>defaultInfo</code> 配置项来指定。</li><li><code>content</code> 可是任何合法的 Markdown 内容。</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>该插件可以被多次使用，以便支持不同类型的容器。</p></div><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>`,9),m=s("li",null,[s("p",null,[n("类型： "),s("code",null,"string")])],-1),b=s("p",null,"详情：",-1),C=s("p",null,"容器的类型。",-1),E={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},f=s("code",null,"name",-1),_=o(`<h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>类型： <code>Record&lt;string, { defaultInfo: string }&gt;</code></p></li><li><p>详情：</p><p>容器在不同 locales 下的默认 <code>info</code> 。</p><p>如果没有指定该配置项，默认 <code>info</code> 会使用大写的 <a href="#type">type</a> 。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">containerPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;tip&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">locales:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;TIP&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        },</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;/zh/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;提示&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        },</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),g=o(`<h3 id="before" tabindex="-1"><a class="header-anchor" href="#before" aria-hidden="true">#</a> before</h3><ul><li><p>类型： <code>(info: string) =&gt; string</code></p></li><li><p>默认值：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">\`&lt;div class=&quot;custom-container </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">type</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;&gt;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;"> ? </span><span style="color:#CE9178;">\`&lt;p class=&quot;custom-container-title&quot;&gt;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">info</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/p&gt;\`</span><span style="color:#D4D4D4;"> : </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#569CD6;">}</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">\`</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>一个用于渲染容器起始标签的函数。</p><p>第一个参数是 <a href="#%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95">容器语法</a> 的 <code>info</code> 部分。</p><p>如果你没有设置 <a href="#after">after</a> 配置项，则该配置项也不会生效。</p></li></ul><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after" aria-hidden="true">#</a> after</h3><ul><li><p>类型： <code>(info: string) =&gt; string</code></p></li><li><p>默认值：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&lt;/div&gt;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>一个用于渲染容器结束标签的函数。</p><p>第一个参数是 <a href="#%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95">容器语法</a> 的 <code>info</code> 部分。</p><p>如果你没有设置 <a href="#before">before</a> 配置项，则该配置项也不会生效。</p></li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><ul><li>类型：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownItContainerRenderFunction</span><span style="color:#D4D4D4;"> = (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Token</span><span style="color:#D4D4D4;">[],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">env</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">MarkdownEnv</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Renderer</span></span>
<span class="line"><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),k=s("p",null,"详情：",-1),x={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},A=s("code",null,"render",-1),B=s("p",null,[n("该插件使用了一个默认的 "),s("code",null,"render"),n(" 函数。但如果你指定了该配置项，那么默认的 "),s("code",null,"render"),n(" 函数就会被替换掉，此时 "),s("a",{href:"#locales"},"locales"),n(" 、 "),s("a",{href:"#before"},"before"),n(" 和 "),s("a",{href:"#after"},"after"),n(" 配置项都会被忽略。")],-1),w=s("h3",{id:"validate",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#validate","aria-hidden":"true"},"#"),n(" validate")],-1),F=s("li",null,[s("p",null,[n("类型： "),s("code",null,"(params: string) => boolean")])],-1),I=s("p",null,"详情：",-1),N={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},P=s("code",null,"validate",-1),R=s("h3",{id:"marker",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#marker","aria-hidden":"true"},"#"),n(" marker")],-1),V=s("li",null,[s("p",null,[n("类型： "),s("code",null,"string")])],-1),q=s("p",null,"详情：",-1),L={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},M=s("code",null,"marker",-1);function T($,z){const t=e("NpmBadge"),l=e("ExternalLinkIcon"),p=e("RouterLink");return c(),d("div",null,[u,a(t,{package:"@vuepress/plugin-container"}),y,s("p",null,[n("该插件简化了 "),s("a",h,[n("markdown-it-container"),a(l)]),n(" 的使用方法，但同时也保留了其原本的能力。")]),s("p",null,[n("默认主题的 "),a(p,{to:"/reference/default-theme/markdown.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%B9%E5%99%A8"},{default:r(()=>[n("自定义容器")]),_:1}),n(" 就是由该插件支持的。")]),v,s("ul",null,[m,s("li",null,[b,C,s("p",null,[n("它将会被用作 "),s("a",E,[n("markdown-it-container"),a(l)]),n(" 的 "),f,n(" 参数。")])])]),_,s("ul",null,[s("li",null,[n("参考： "),s("ul",null,[s("li",null,[a(p,{to:"/guide/i18n.html"},{default:r(()=>[n("指南 > 多语言支持")]),_:1})])])])]),g,s("ul",null,[s("li",null,[k,s("p",null,[s("a",x,[n("markdown-it-container"),a(l)]),n(" 的 "),A,n(" 配置项。")]),B])]),w,s("ul",null,[F,s("li",null,[I,s("p",null,[s("a",N,[n("markdown-it-container"),a(l)]),n(" 的 "),P,n(" 配置项。")])])]),R,s("ul",null,[V,s("li",null,[q,s("p",null,[s("a",L,[n("markdown-it-container"),a(l)]),n(" 的 "),M,n(" 配置项。")])])])])}const j=i(D,[["render",T],["__file","container.html.vue"]]);export{j as default};
