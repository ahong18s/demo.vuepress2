import{_ as c,r as i,o as d,c as r,d as s,a as n,b as a,w as t,e as l}from"./app-4042ea51.js";const u={},h=n("h1",{id:"node-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#node-api","aria-hidden":"true"},"#"),a(" Node API")],-1),k={href:"https://www.npmjs.com/package/@vuepress/core",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.npmjs.com/package/vuepress",target:"_blank",rel:"noopener noreferrer"},m=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @vuepress/core@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> App</h2>`,2),b=l(`<p><code>BuildApp</code> 和 <code>DevApp</code> 除了 <a href="#build">build</a> 和 <a href="#dev">dev</a> 方法外，拥有一样的属性和方法。</p><h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp" aria-hidden="true">#</a> createBuildApp</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createBuildApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AppConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> BuildApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Build 模式的 App 实例，用于构建静态文件。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">build</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createBuildApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ...配置项</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 初始化和准备</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 构建</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 处理 onGenerated hook</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span>pluginApi<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onGenerated<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考： <ul><li><a href="#build">Node API &gt; App 方法 &gt; build</a></li></ul></li></ul><h3 id="createdevapp" tabindex="-1"><a class="header-anchor" href="#createdevapp" aria-hidden="true">#</a> createDevApp</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createDevApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AppConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DevApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Dev 模式的 App 实例，用于启动开发服务器。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">dev</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createDevApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ...配置项</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 初始化和准备</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 启动开发服务器</span>
  <span class="token keyword">const</span> closeDevServer <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 准备文件监听器</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// 重启开发服务器</span>
  <span class="token keyword">const</span> <span class="token function-variable function">restart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token comment">// 关闭所有监听器</span>
      <span class="token operator">...</span>watchers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 关闭当前的开发服务器</span>
      <span class="token function">closeDevServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 处理 onWatched hook</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span>pluginApi<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onWatched<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> watchers<span class="token punctuation">,</span> restart<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考： <ul><li><a href="#dev">Node API &gt; App 方法 &gt; dev</a></li></ul></li></ul><h2 id="app-属性" tabindex="-1"><a class="header-anchor" href="#app-属性" aria-hidden="true">#</a> App 属性</h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li><p>类型： <code>AppOptions</code></p></li><li><p>详情：</p><p>VuePress App 的配置项。</p><p>这些配置项来自于 <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a> 的 <code>config</code> 参数，但所有可选的字段都填充上了默认值。</p></li></ul><h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata" aria-hidden="true">#</a> siteData</h3>`,21),g=n("li",null,[n("p",null,[a("类型： "),n("code",null,"SiteData")])],-1),_=n("p",null,"详情：",-1),f=l('<h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>VuePress App 的版本，即 <code>@vuepress/core</code> 包的版本。</p></li></ul><h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild" aria-hidden="true">#</a> env.isBuild</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Build 模式的环境标记，即当前 App 是否是 <a href="#createbuildapp">BuildApp</a> 实例。</p></li></ul><h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev" aria-hidden="true">#</a> env.isDev</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Dev 模式的环境标记，即当前 App 是否是 <a href="#createdevapp">DevApp</a> 实例。</p></li></ul><h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug" aria-hidden="true">#</a> env.isDebug</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否开启 Debug 模式的环境标记。</p></li></ul><h3 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> markdown</h3>',9),w=n("li",null,[n("p",null,[a("类型： "),n("code",null,"MarkdownIt")])],-1),y=n("p",null,"详情：",-1),P={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"pages",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pages","aria-hidden":"true"},"#"),a(" pages")],-1),A=n("li",null,[n("p",null,[a("类型： "),n("code",null,"Page[]")])],-1),B=n("p",null,"详情：",-1),E=n("p",null,[n("a",{href:"#page"},"Page"),a(" 对象数组。")],-1),D=l(`<h2 id="app-方法" tabindex="-1"><a class="header-anchor" href="#app-方法" aria-hidden="true">#</a> App 方法</h2><h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> dir</h3><ul><li><p>工具函数：</p><ul><li><code>dir.cache()</code>： 解析至缓存目录</li><li><code>dir.temp()</code>： 解析至临时文件目录</li><li><code>dir.source()</code>： 解析至源文件目录</li><li><code>dir.dest()</code>： 解析至输出目录</li><li><code>dir.client()</code>： 解析至 <code>@vuepress/client</code> 目录</li><li><code>dir.public()</code>： 解析至 Public 文件目录</li></ul></li><li><p>函数签名：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">AppDirFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>用于解析对应目录下的文件绝对路径的一些工具函数。</p><p>如果你不传入任何参数，就会返回对应目录的绝对路径。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 解析 \`\${sourceDir}/README.md\` 文件的绝对路径</span>
<span class="token keyword">const</span> homeSourceFile <span class="token operator">=</span> app<span class="token punctuation">.</span>dir<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&#39;README.md&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="writetemp" tabindex="-1"><a class="header-anchor" href="#writetemp" aria-hidden="true">#</a> writeTemp</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">writeTemp</span><span class="token punctuation">(</span>file<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td><code>string</code></td><td>要写入的临时文件的路径，相对于临时文件目录。</td></tr><tr><td>content</td><td><code>string</code></td><td>要写入的临时文件路径的内容。</td></tr></tbody></table><ul><li><p>详情：</p><p>用于写入临时文件的方法。</p><p>写入的文件可以在客户端文件中通过 <code>@temp</code> 别名来引入。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在 onPrepared hook 中写入临时文件</span>
  <span class="token keyword">async</span> <span class="token function">onPrepared</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">writeTemp</span><span class="token punctuation">(</span><span class="token string">&#39;foo.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;export const foo = \\&#39;bar\\&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 在客户端文件中引入临时文件</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@temp/foo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> init</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17),M=n("li",null,[n("p",null,"详情："),n("p",null,"初始化 VuePress App 。")],-1),I=n("p",null,"参考：",-1),F=l(`<h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare" aria-hidden="true">#</a> prepare</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),R=n("li",null,[n("p",null,"详情："),n("p",null,"准备客户端临时文件。")],-1),N=n("p",null,"参考：",-1),V=l(`<h3 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),C=n("li",null,[n("p",null,"详情："),n("p",null,"生成静态站点文件。"),n("p",null,[a("该方法仅在 "),n("a",{href:"#createbuildapp"},"BuildApp"),a(" 中可用。")])],-1),H=n("p",null,"参考：",-1),z=l(`<h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> dev</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),L=n("li",null,[n("p",null,"详情："),n("p",null,"启动开发服务器。"),n("p",null,[a("该方法仅在 "),n("a",{href:"#createdevapp"},"DevApp"),a(" 中可用。")])],-1),S=n("p",null,"参考：",-1),j=l(`<h2 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> Page</h2><h3 id="createpage" tabindex="-1"><a class="header-anchor" href="#createpage" aria-hidden="true">#</a> createPage</h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createPage</span><span class="token operator">:</span> <span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">,</span> options<span class="token operator">:</span> PageOptions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Page<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>app</td><td><code>App</code></td><td>VuePress App 实例。</td></tr><tr><td>options</td><td><code>PageOptions</code></td><td>创建 VuePress Page 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 VuePress Page 对象。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/core&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在 onInitialized hook 中创建一个额外页面</span>
  <span class="token keyword">async</span> <span class="token function">onInitialized</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span>pages<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      <span class="token keyword">await</span> <span class="token function">createPage</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&#39;/foo.html&#39;</span><span class="token punctuation">,</span>
        frontmatter<span class="token operator">:</span> <span class="token punctuation">{</span>
          layout<span class="token operator">:</span> <span class="token string">&#39;Layout&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\
# 某个 Page

你好，世界。
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),T=n("li",null,[n("a",{href:"#pages"},"Node API > App 属性 > pages")],-1),O=n("h2",{id:"page-属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#page-属性","aria-hidden":"true"},"#"),a(" Page 属性")],-1),G=n("h3",{id:"key",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#key","aria-hidden":"true"},"#"),a(" key")],-1),W=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string")])],-1),K=n("p",null,"详情：",-1),U=n("p",null,"该 Page 的标识。",-1),$={href:"https://router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},q=n("p",null,"参考：",-1),J=n("h3",{id:"path",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#"),a(" path")],-1),Q=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string")])],-1),X=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的路由路径。")],-1),Y=n("p",null,"参考：",-1),Z=n("li",null,[n("a",{href:"#pathinferred"},"Node API > Page 属性 > pathInferred")],-1),nn=n("h3",{id:"title",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#title","aria-hidden":"true"},"#"),a(" title")],-1),an=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string")])],-1),sn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的标题。")],-1),en=n("p",null,"参考：",-1),tn=n("h3",{id:"lang",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lang","aria-hidden":"true"},"#"),a(" lang")],-1),ln=l("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的语言。</p></li><li><p>示例：</p><ul><li><code>&#39;en-US&#39;</code></li><li><code>&#39;zh-CN&#39;</code></li></ul></li>",3),pn=n("p",null,"参考：",-1),on=n("h3",{id:"frontmatter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),a(" frontmatter")],-1),cn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"PageFrontmatter")])],-1),dn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的 Frontmatter 。")],-1),rn=n("p",null,"参考：",-1),un=l(`<h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> headers</h3><ul><li>类型： <code>PageHeader[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageHeader</span> <span class="token punctuation">{</span>
  level<span class="token operator">:</span> <span class="token builtin">number</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span>
  slug<span class="token operator">:</span> <span class="token builtin">string</span>
  children<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),hn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的小标题。")],-1),kn=n("p",null,"参考：",-1),vn=l(`<h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li>类型： <code>PageData</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageData</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> <span class="token builtin">string</span>
  path<span class="token operator">:</span> <span class="token builtin">string</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span>
  lang<span class="token operator">:</span> <span class="token builtin">string</span>
  frontmatter<span class="token operator">:</span> PageFrontmatter
  headers<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),mn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的数据。"),n("p",null,"Page 数据可以在客户端代码中使用。")],-1),bn=n("p",null,"参考：",-1),gn=l('<h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的未经渲染的原始内容。</p></li></ul><h3 id="contentrendered" tabindex="-1"><a class="header-anchor" href="#contentrendered" aria-hidden="true">#</a> contentRendered</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的渲染后的内容。</p></li></ul><h3 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> date</h3>',5),_n=l("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的日期，遵从 &#39;yyyy-MM-dd&#39; 格式。</p></li><li><p>示例：</p><ul><li><code>&#39;0000-00-00&#39;</code></li><li><code>&#39;2021-08-16</code>&#39;</li></ul></li>",3),fn=n("p",null,"参考：",-1),wn=n("h3",{id:"deps",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deps","aria-hidden":"true"},"#"),a(" deps")],-1),yn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string[]")])],-1),Pn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的依赖。"),n("p",null,[a("举例来说，如果在页面中导入了代码片段，那么被导入文件的绝对路径就会被添加到 "),n("code",null,"deps"),a(" 中。")])],-1),xn=n("p",null,"参考：",-1),An=l(`<h3 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h3><ul><li>类型： <code>MarkdownLink[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MarkdownLink</span> <span class="token punctuation">{</span>
  raw<span class="token operator">:</span> <span class="token builtin">string</span>
  relative<span class="token operator">:</span> <span class="token builtin">string</span>
  absolute<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>该 Page 内容中包含的链接。</p></li></ul><h3 id="markdownenv" tabindex="-1"><a class="header-anchor" href="#markdownenv" aria-hidden="true">#</a> markdownEnv</h3>`,5),Bn=l("<li><p>类型： <code>Record&lt;string, unknown&gt;</code></p></li><li><p>详情：</p><p>在使用 markdown-it 解析 Markdown 内容时的 <code>env</code> 对象。</p><p>一些 markdown-it 插件可能会在这个对象中存储一些额外的信息，你可以使用它们来进行高级定制化。</p><p>需要注意的是，其他的一些 Page 属性其实也是从 <code>env</code> 对象中获取到的，但是我们已经把这些属性从 <code>page.markdownEnv</code> 中移除掉了。</p></li>",2),En=n("p",null,"参考：",-1),Dn={href:"https://markdown-it.github.io/markdown-it/#MarkdownIt.parse",target:"_blank",rel:"noopener noreferrer"},Mn=n("h3",{id:"pathinferred",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pathinferred","aria-hidden":"true"},"#"),a(" pathInferred")],-1),In=l('<li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 根据文件路径推断出的路由路径。</p><p>默认情况下，路由路径是根据 Markdown 源文件的相对文件路径推断出来的。然而，用户可能会显式指定页面路由，比如通过 <a href="#permalink">permalink</a> 来指定该页面最终使用的路由路径。因此我们在 Page 属性中保留推断出来的路径，以便于你在某些情况下可能会用到它。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/foo.html&#39;</code></li></ul></li>',3),Fn=n("p",null,"参考：",-1),Rn=n("li",null,[n("a",{href:"#path"},"Node API > Page 属性 > path")],-1),Nn=n("h3",{id:"pathlocale",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pathlocale","aria-hidden":"true"},"#"),a(" pathLocale")],-1),Vn=l("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 路由路径的 Locale 前缀。</p><p>它是根据页面的 Markdown 源文件相对路径、以及用户配置的 <code>locales</code> 的键推断得到的。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/en/&#39;</code></li><li><code>&#39;/zh/&#39;</code></li></ul></li>",3),Cn=n("p",null,"参考：",-1),Hn=n("h3",{id:"permalink",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#permalink","aria-hidden":"true"},"#"),a(" permalink")],-1),zn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string | null")])],-1),Ln=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的永久链接。")],-1),Sn=n("p",null,"参考：",-1),jn=n("h3",{id:"routemeta",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#routemeta","aria-hidden":"true"},"#"),a(" routeMeta")],-1),Tn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"Record<string, unknown>")])],-1),On=n("li",null,[n("p",null,"详情："),n("p",null,"附加到 vue-router 路由记录上的额外数据。")],-1),Gn=n("p",null,"参考：",-1),Wn={href:"https://router.vuejs.org/zh/api/#meta",target:"_blank",rel:"noopener noreferrer"},Kn=l('<div class="custom-container tip"><p class="custom-container-title">Route Meta 和 Page Data 的区别是什么？</p><p><a href="#routemeta">Route Meta</a> 和 <a href="#data">Page Data</a> 都可以在客户端代码中使用。然而， Route Meta 是附加在路由记录上的，因此当用户进入你的站点时，所有页面的 Route Meta 都会立即被加载。相比之下， Page Data 是存储在单独的文件中的，只有在用户进入对应页面时才会被加载。</p><p>因此，不建议在 Route Meta 中存储大量的信息，否则在站点有很多页面时，将会影响站点的初始加载速度。</p></div><h3 id="sfcblocks" tabindex="-1"><a class="header-anchor" href="#sfcblocks" aria-hidden="true">#</a> sfcBlocks</h3>',2),Un=n("li",null,[n("p",null,[a("类型： "),n("code",null,"MarkdownSfcBlocks")])],-1),$n=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 中提取出的 Vue SFC Blocks 。")],-1),qn=n("p",null,"参考：",-1),Jn=l('<h3 id="slug" tabindex="-1"><a class="header-anchor" href="#slug" aria-hidden="true">#</a> slug</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的 Slug 。</p><p>它是根据页面的 Markdown 源文件的文件名推断得到的。</p></li></ul><h3 id="filepath" tabindex="-1"><a class="header-anchor" href="#filepath" aria-hidden="true">#</a> filePath</h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的绝对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul><h3 id="filepathrelative" tabindex="-1"><a class="header-anchor" href="#filepathrelative" aria-hidden="true">#</a> filePathRelative</h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的相对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul>',6);function Qn(Xn,Yn){const o=i("NpmBadge"),p=i("ExternalLinkIcon"),e=i("RouterLink");return d(),r("div",null,[h,s(o,{package:"@vuepress/core"}),n("p",null,[a("Node API 是由 "),n("a",k,[a("@vuepress/core"),s(p)]),a(" 包提供的。它是 "),n("a",v,[a("vuepress"),s(p)]),a(" 包的依赖之一，当然你也可以单独安装它：")]),m,n("p",null,[s(e,{to:"/reference/plugin-api.html"},{default:t(()=>[a("插件 API")]),_:1}),a(" 的所有 Hooks 中都可以获取到 App 实例。")]),b,n("ul",null,[g,n("li",null,[_,n("p",null,[a("由用户设置的站点数据，包含所有的 "),s(e,{to:"/reference/config.html#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE"},{default:t(()=>[a("站点配置")]),_:1}),a(" ，可以在客户端代码中使用。")])])]),f,n("ul",null,[w,n("li",null,[y,n("p",null,[a("用于解析 Markdown 内容的 "),n("a",P,[a("markdown-it"),s(p)]),a(" 实例。")]),n("p",null,[a("它仅在 "),s(e,{to:"/reference/plugin-api.html#oninitialized"},{default:t(()=>[a("onInitialized")]),_:1}),a(" 以及之后的 Hooks 中才可用。")])])]),x,n("ul",null,[A,n("li",null,[B,E,n("p",null,[a("它仅在 "),s(e,{to:"/reference/plugin-api.html#oninitialized"},{default:t(()=>[a("onInitialized")]),_:1}),a(" 以及之后的 Hooks 中才可用。")])])]),D,n("ul",null,[M,n("li",null,[I,n("ul",null,[n("li",null,[s(e,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),F,n("ul",null,[R,n("li",null,[N,n("ul",null,[n("li",null,[s(e,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),V,n("ul",null,[C,n("li",null,[H,n("ul",null,[n("li",null,[s(e,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),z,n("ul",null,[L,n("li",null,[S,n("ul",null,[n("li",null,[s(e,{to:"/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),j,n("ul",null,[n("li",null,[a("参考： "),n("ul",null,[T,n("li",null,[s(e,{to:"/advanced/cookbook/adding-extra-pages.html"},{default:t(()=>[a("Cookbook > 添加额外页面")]),_:1})])])])]),O,G,n("ul",null,[W,n("li",null,[K,U,n("p",null,[a("Page Key 会被用作页面路由的 "),n("a",$,[a("name"),s(p)]),a("。")])]),n("li",null,[q,n("ul",null,[n("li",null,[s(e,{to:"/reference/components.html#content"},{default:t(()=>[a("Built-in Components > Content")]),_:1})])])])]),J,n("ul",null,[Q,X,n("li",null,[Y,n("ul",null,[n("li",null,[s(e,{to:"/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:t(()=>[a("指南 > 页面 > 路由")]),_:1})]),Z])])]),nn,n("ul",null,[an,sn,n("li",null,[en,n("ul",null,[n("li",null,[s(e,{to:"/reference/frontmatter.html#title"},{default:t(()=>[a("Frontmatter > title")]),_:1})])])])]),tn,n("ul",null,[ln,n("li",null,[pn,n("ul",null,[n("li",null,[s(e,{to:"/reference/frontmatter.html#title"},{default:t(()=>[a("Frontmatter > lang")]),_:1})])])])]),on,n("ul",null,[cn,dn,n("li",null,[rn,n("ul",null,[n("li",null,[s(e,{to:"/reference/frontmatter.html"},{default:t(()=>[a("Frontmatter")]),_:1})])])])]),un,n("ul",null,[hn,n("li",null,[kn,n("ul",null,[n("li",null,[s(e,{to:"/reference/config.html#markdown-headers"},{default:t(()=>[a("配置 > markdown.headers")]),_:1})])])])]),vn,n("ul",null,[mn,n("li",null,[bn,n("ul",null,[n("li",null,[s(e,{to:"/reference/client-api.html#usepagedata"},{default:t(()=>[a("客户端 API > usePageData")]),_:1})]),n("li",null,[s(e,{to:"/reference/plugin-api.html#extendspage"},{default:t(()=>[a("插件 API > extendsPage")]),_:1})])])])]),gn,n("ul",null,[_n,n("li",null,[fn,n("ul",null,[n("li",null,[s(e,{to:"/reference/frontmatter.html#date"},{default:t(()=>[a("Frontmatter > date")]),_:1})])])])]),wn,n("ul",null,[yn,Pn,n("li",null,[xn,n("ul",null,[n("li",null,[s(e,{to:"/reference/config.html#markdown-importcode"},{default:t(()=>[a("配置 > markdown.importCode")]),_:1})])])])]),An,n("ul",null,[Bn,n("li",null,[En,n("ul",null,[n("li",null,[n("a",Dn,[a("markdown-it > API Documentation > MarkdownIt > parse"),s(p)])])])])]),Mn,n("ul",null,[In,n("li",null,[Fn,n("ul",null,[n("li",null,[s(e,{to:"/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:t(()=>[a("指南 > 页面 > 路由")]),_:1})]),Rn])])]),Nn,n("ul",null,[Vn,n("li",null,[Cn,n("ul",null,[n("li",null,[s(e,{to:"/reference/config.html#locales"},{default:t(()=>[a("配置 > locales")]),_:1})])])])]),Hn,n("ul",null,[zn,Ln,n("li",null,[Sn,n("ul",null,[n("li",null,[s(e,{to:"/reference/frontmatter.html#permalink"},{default:t(()=>[a("Frontmatter > permalink")]),_:1})]),n("li",null,[s(e,{to:"/reference/frontmatter.html#permalinkpattern"},{default:t(()=>[a("Frontmatter > permalinkPattern")]),_:1})])])])]),jn,n("ul",null,[Tn,On,n("li",null,[Gn,n("ul",null,[n("li",null,[s(e,{to:"/reference/frontmatter.html#routemeta"},{default:t(()=>[a("Frontmatter > routeMeta")]),_:1})]),n("li",null,[n("a",Wn,[a("vue-router > API 参考 > RouteRecordRaw > meta"),s(p)])])])])]),Kn,n("ul",null,[Un,$n,n("li",null,[qn,n("ul",null,[n("li",null,[s(e,{to:"/reference/config.html#markdown-sfc"},{default:t(()=>[a("配置 > markdown.sfc")]),_:1})])])])]),Jn])}const na=c(u,[["render",Qn],["__file","node-api.html.vue"]]);export{na as default};
