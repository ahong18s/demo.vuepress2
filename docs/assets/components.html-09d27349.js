import{_ as s,r as o,o as r,c as d,d as t,a as e,b as n,w as c,e as u}from"./app-09910f35.js";const p={},h=e("h1",{id:"built-in-components",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#built-in-components","aria-hidden":"true"},"#"),n(" Built-in Components")],-1),m=u(`<h2 id="clientonly" tabindex="-1"><a class="header-anchor" href="#clientonly" aria-hidden="true">#</a> ClientOnly</h2><ul><li>Usage:</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>&lt;ClientOnly&gt;
  &lt;NonSsrFriendlyComponent /&gt;
&lt;/ClientOnly&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Details:</p><p>This component and its children will only be rendered in client-side. That means, it will not be rendered to HTML during build (SSR).</p><p>If a component is trying to access Browser / DOM APIs directly in <code>setup()</code>, an error will occur during build because those APIs are unavailable in Node.js environment. In such case, you could do either:</p><ul><li>Modify the component to only access Browser / DOM APIs in <code>onBeforeMount()</code> or <code>onMounted()</code> hook.</li><li>Wrap the component with <code>&lt;ClientOnly&gt;</code>.</li></ul></li></ul><h2 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> Content</h2><ul><li><p>Props:</p><ul><li>pageKey <ul><li>Type: <code>string</code></li><li>Required: <code>false</code></li></ul></li></ul></li><li><p>Usage:</p></li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>&lt;Content page-key=&quot;v-xxxxxx&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),_=e("p",null,"Details:",-1),g=e("p",null,"This component will render the Markdown content of a page.",-1),v={href:"https://router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"pageKey",-1),b=e("p",null,"This component is mainly for developing themes. You won't need it in most cases.",-1),y=e("p",null,"Also see:",-1);function k(x,w){const l=o("NpmBadge"),i=o("ExternalLinkIcon"),a=o("RouterLink");return r(),d("div",null,[h,t(l,{package:"@vuepress/client"}),m,e("ul",null,[e("li",null,[_,g,e("p",null,[n("The page key is the "),e("a",v,[n("name"),t(i)]),n(" of the page route. If the "),f,n(" prop is not provided, it will render the page of current route.")]),b]),e("li",null,[y,e("ul",null,[e("li",null,[t(a,{to:"/en-US/reference/node-api.html#key"},{default:c(()=>[n("Node API > Page Properties > key")]),_:1})])])])])])}const B=s(p,[["render",k],["__file","components.html.vue"]]);export{B as default};
