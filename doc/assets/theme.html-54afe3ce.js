import{_ as l,r as o,o as i,c as u,a as s,b as n,d as a,w as t,e as p}from"./app-e83a4b47.js";const d={},r=s("h1",{id:"开发主题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#开发主题","aria-hidden":"true"},"#"),n(" 开发主题")],-1),k={class:"custom-container tip"},v=s("p",{class:"custom-container-title"},"提示",-1),m=s("h2",{id:"创建一个主题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#创建一个主题","aria-hidden":"true"},"#"),n(" 创建一个主题")],-1),b=s("em",null,"主题对象",-1),g=s("em",null,"主题函数",-1),h=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">fooTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 返回一个主题对象</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-foo&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// 主题的客户端配置文件的路径</span>
    clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;client.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// 设置自定义 dev / build 模板</span>
    <span class="token comment">// 如果没有指定模板，将会使用 \`@vuepress/client\` 提供的默认模板</span>
    templateBuild<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;templates/build.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    templateDev<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;templates/dev.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// 使用插件</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token comment">// 其他的插件 API 也都可用</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">barTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 返回一个主题函数</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-bar&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，创建主题的客户端配置文件 <code>client.js</code> :</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/Layout.vue&#39;</span>
<span class="token keyword">import</span> NotFound <span class="token keyword">from</span> <span class="token string">&#39;./layouts/NotFound.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    Layout<span class="token punctuation">,</span>
    NotFound<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>layouts</code> 字段声明了你的主题提供的布局。一个主题必须提供至少两个布局：<code>Layout</code> 和 <code>NotFound</code> 。前者用于提供一般页面的默认布局，后者用于提供 404 页面的布局。</p>`,4),_=s("code",null,"Layout",-1),f=p(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>NotFound</code> 布局会被用于 <code>404.html</code> 页面：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>404 Not Found<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y=s("h2",{id:"发布到-npm",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#发布到-npm","aria-hidden":"true"},"#"),n(" 发布到 NPM")],-1),w={href:"https://docs.npmjs.com/cli/v8/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"},x=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-foo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;vuepress-theme&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),N=s("code",null,"name",-1),C=s("code",null,"vuepress-theme-xxx",-1),L=s("code",null,"@org/vuepress-theme-xxx",-1),j=s("em",null,"主题对象",-1),q=s("li",null,[n("在 "),s("code",null,"keywords"),n(" 中包含 "),s("code",null,"vuepress-theme"),n(" ，这样用户可以在 NPM 上搜索到你的主题。")],-1);function F(P,V){const e=o("RouterLink"),c=o("ExternalLinkIcon");return i(),u("div",null,[r,s("div",k,[v,s("p",null,[n("在阅读该指南之前，你最好先了解一下 "),a(e,{to:"/advanced/plugin.html"},{default:t(()=>[n("开发插件")]),_:1}),n(" 指南。")])]),m,s("p",null,[n("VuePress 主题是一个特殊的插件，它应该符合 "),a(e,{to:"/reference/theme-api.html"},{default:t(()=>[n("主题 API")]),_:1}),n(" 。和插件一样，主题可以是一个 "),b,n(" 或一个 "),g,n(" ，并且通常通过一个函数来接收配置项：")]),h,s("p",null,[_,n(" 布局应该包含 "),a(e,{to:"/reference/components.html#content"},{default:t(()=>[n("Content")]),_:1}),n(" 组件来展示 Markdown 内容：")]),f,s("p",null,[n("你可以提供多个布局，用户可以通过 "),a(e,{to:"/reference/frontmatter.html#layout"},{default:t(()=>[n("layout")]),_:1}),n(" Frontmatter 来修改布局。")]),y,s("p",null,[n("同样的，对于主题也有 "),s("a",w,[n("package.json"),a(c)]),n(" 相关的约定：")]),x,s("ul",null,[s("li",null,[n("将 "),N,n(" 按照约定命名： "),C,n(" 或 "),L,n(" ，它应该和 "),j,n(" 的 "),a(e,{to:"/reference/theme-api.html#name"},{default:t(()=>[n("name")]),_:1}),n(" 字段保持一致。")]),q])])}const I=l(d,[["render",F],["__file","theme.html.vue"]]);export{I as default};
